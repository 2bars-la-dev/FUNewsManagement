@page
@model WebClient.Pages.Categories.IndexModel
@using WebClient.Models
@{
    ViewData["Title"] = "Categories";
}

<h2>Categories</h2>
<a asp-page="Create" class="btn btn-primary mb-3">Create Category</a>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        <strong>Error:</strong> @Model.ErrorMessage
    </div>
}

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var category in Model.Categories)
        {
            <tr>
                <td>@category.CategoryName</td>
                <td>@category.CategoryDesciption</td>
                <td>@(category.IsActive == true ? "Active" : "Inactive")</td>
                <td>
                    <a asp-page="Edit" asp-route-id="@category.CategoryId" class="btn btn-sm btn-warning">Edit</a>
                    <button class="btn btn-sm btn-danger" onclick="confirmDelete(@category.CategoryId)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function confirmDelete(id) {
            if (confirm("Are you sure you want to delete this category?")) {
                fetch(`/Categories/Index?handler=Delete&id=${id}`, {
                    method: 'POST'
                })
                    .then(async response => {
                        if (!response.ok) {
                            const text = await response.text();
                            throw new Error(`Failed to delete. Server returned ${response.status}: ${text}`);
                        }

                        const contentType = response.headers.get("content-type") || "";
                        if (contentType.includes("application/json")) {
                            return response.json();
                        }

                        return { success: true }; // fallback nếu không có JSON
                    })
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('Failed to delete: ' + (data.error || 'unknown error'));
                        }
                    })
                    .catch(error => {
                        alert('Error: ' + error.message);
                    });
            }
        }

    </script>
}
